name: CI/CD Pipeline

permissions:
  issues: write

on:
  schedule:
    - cron: '*/1 * * * *'
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      DEPLOY_TO_PRODUCTION:
        description: 'Deploy to production?'
        default: 'Yes'
        required: true
      TEST_SUITE:
        description: 'Test Suite to Run'
        default: 'ALL'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: |
          echo "Build $GITHUB_SHA"
          docker build -t mtararujs/python-greetings-app:latest .
          # docker push mtararujs/python-greetings-app:latest

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ needs.build.result == 'success' }}
    steps:
      - name: Deploy to Dev
        run: |
          echo "Deployment of hello-app to dev is starting.."
          # Insert your deployment commands here

      - name: Print Cucumber Tags
        env:
          TEST_SUITE: ${{ inputs.TEST_SUITE }}
        run: |
          local TEST_SUITE_VALUE=''
          if [[ $TEST_SUITE == 'NONE' ]]; then
            echo "cucumber tags none, no test executed"
          else
            TEST_SUITE_VALUE="$TEST_SUITE"
            echo "cucumber tags $TEST_SUITE_VALUE"
          fi
          # if [[ ${{ github.event.inputs.DEPLOY_TO_PRODUCTION }} == 'Yes' ]]; then
          #   echo "cucumber tags yes"
          # else
          #   echo "cucumber tags no"
          # fi

  test-dev:
    runs-on: ubuntu-latest
    needs: deploy-dev
    if: ${{ needs.deploy-dev.result == 'success' }}
    steps:
      - name: Test Dev
        run: |
          echo "Testing of hello-app to dev is starting"
          # Insert your testing commands here

  deploy-prd:
    runs-on: ubuntu-latest
    needs: test-dev
    if: ${{ github.event.inputs.DEPLOY_TO_PRODUCTION == 'Yes' && needs.test-dev.result == 'success' }}
    steps:
      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: mtararujs
          minimum-approvals: 1
          issue-title: "Deploying v1.3.5 to prod from staging"
          issue-body: "Please approve or deny the deployment of version v1.3.5."
          additional-approved-words: ''
          additional-denied-words: ''
      - name: Deploy to PRD
        run: |
          echo "Deployment of hello-app to prd is starting.."
          # Insert your deployment commands here

  test-prd:
    runs-on: ubuntu-latest
    needs: deploy-prd
    if: ${{ github.event.inputs.DEPLOY_TO_PRODUCTION == 'Yes' && needs.deploy-prd.result == 'success' }}
    steps:
      - name: Test PRD
        run: |
          echo "Testing of hello-app to prd is starting"
          # Insert your testing commands here

  invoke-pipeline:
    runs-on: ubuntu-latest
    needs: test-prd
    if: ${{ needs.test-prd.result == 'success' }}
    steps:
      - name: Invoke Pipeline
        run: |
          echo "Invoking another pipeline job..."
          # Insert your job triggering commands here

  cleanup:
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Clean up Docker Images
        run: |
          echo 'Cleaning up Docker images...'
          docker rmi -f test

  notify-discord:
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - uses: rjstone/discord-webhook-notify@v1
        with:
            severity: error
            details: Failure!
            webhookUrl: https://discord.com/api/webhooks/1139668547946168561/ZHUF4ww-auCPadJknX44uhBS1utUe0SzBEWXrVmMZVFujKLfMY6a6l7L33fEQd9G-_4p