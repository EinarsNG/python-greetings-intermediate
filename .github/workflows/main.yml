name: CI/CD Pipeline

on:
  schedule:
    - cron: '*/1 * * * *'
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Build Docker Image
        run: |
          echo "Build $GITHUB_SHA"
          docker build -t mtararujs/python-greetings-app:latest .
          # docker push mtararujs/python-greetings-app:latest

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to Dev
        run: |
          echo "Deployment of hello-app to dev is starting.."
          # Insert your deployment commands here

      - name: Print Cucumber Tags
        run: |
          if [[ ${{ env.DEPLOY_TO_PRODUCTION }} == 'Yes' ]]; then
            echo "cucumber tags yes"
          else
            echo "cucumber tags no"
          fi

  test-dev:
    runs-on: ubuntu-latest
    needs: deploy-dev
    steps:
      - name: Test Dev
        run: |
          echo "Testing of hello-app to dev is starting"
          # Insert your testing commands here

  approval:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_run'
    needs: test-dev
    steps:
      - name: Wait for Approval
        run: |
          deploymentDelay=$(curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -d '{"event_type": "deployment_approval"}' \
            https://api.github.com/repos/${{ github.repository }}/dispatches | jq -r '.workflow_run.updated_at')
          sleep "$deploymentDelay"

  deploy-prd:
    runs-on: ubuntu-latest
    needs: approval
    if: ${{ matrix.DEPLOY_TO_PRODUCTION }} == 'Yes'
    steps:
      - name: Deploy to PRD
        run: |
          echo "Deployment of hello-app to prd is starting.."
          # Insert your deployment commands here

  test-prd:
    runs-on: ubuntu-latest
    needs: deploy-prd
    if: ${{ matrix.DEPLOY_TO_PRODUCTION }} == 'Yes'
    steps:
      - name: Test PRD
        run: |
          echo "Testing of hello-app to prd is starting"
          # Insert your testing commands here

  invoke-pipeline:
    runs-on: ubuntu-latest
    needs: test-prd
    steps:
      - name: Invoke Pipeline
        run: |
          echo "Invoking another pipeline job..."
          # Insert your job triggering commands here

  cleanup:
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Clean up Docker Images
        run: |
          echo 'Cleaning up Docker images...'
          docker rmi -f test